// ****** Operações Tinker/Eloquent ****** //

    // Inserção //
    // App\Fornecedor::create(['nome'=>'Fornecedor ABC', 'site'=>'fornecedorabc.com.br', 'uf'=>'MS', 'email'=>'contato@fornecedorabc.com.br']); 

    // Seleção dos dados //
    //use \App\Fornecedor;                                                                            
    //$fornecedores = Fornecedor::all();   
    
    // Seleção dos dados em formato de Array //
    //print_r($fornecedores->toArray());    

    // Buscar um objeto específico //
    //$fornecedores2 = Fornecedor::find(2);

    // Buscar uma coleção de objetos //
    // $fornecedores2 = Fornecedor::find([1, 2]);

    // Utilizando Filtro (Where) //
    // Operadores: ==, =>, <=, <>, <, >, like,
    // $contatos = SiteContato::where('id', '>', '1')->get();     

    // Utilizando Filtro (WhereIn) -- 2 Params //
    // $contatos = SiteContato::whereIn('motivo_contato',[1, 3])->get();                               

    // Utilizando Filtro (WhereNotIn) -- 2 Params //
    // $contatos = SiteContato::whereNotIn('motivo_contato',[1, 3])->get();                               

    // Utilizando Filtro (whereBetween) -- Para Intervalos //
    // $contatos = SiteContato::whereBetween('id',[3, 6])->get(); 
    
    // Utilizando Filtro (whereNotBetween) -- Para Intervalos //
    // $contatos = SiteContato::whereNotBetween('id',[3, 6])->get();
    
    // Utilizando vários Wheres nas consultas (And)
    // $contatos = SiteContato::where('nome', '<>', 'Fernando')->whereIn('motivo_contato', [1, 2])->whereBetween('created_at', ['2022-01-01 00:00:00', '2022-03-31 23:59:59'])->get();

    // Utilizando vários orWheres nas consultas (Or)
    // $contatos = SiteContato::where('nome', '<>', 'Fernando')->orWhereIn('motivo_contato', [1, 2])->orWhereBetween('created_at', ['2022-01-01 00:00:00', '2022-03-31 23:59:59'])->get();  

    // Utilizando Filtro (WhereNull) //
    // $contatos = SiteContato::whereNull('updated_at')->get();   

    // Utilizando Filtro (WhereNotNull) //
    // $contatos = SiteContato::whereNotNull('updated_at')->get();  
    
    // Utilizando Filtro (WhereDate) //
    // $contatos = SiteContato::whereDate('created_at', '2022-02-24')->get();

    // Utilizando Filtro (WhereDay) //
    // $contatos = SiteContato::whereDay('created_at', '24')->get();  

    // Utilizando Filtro (WhereMonth) //
    // $contatos = SiteContato::whereMonth('created_at', '2')->get();

    // Utilizando Filtro (WhereYear) //
    // $contatos = SiteContato::whereYear('created_at', '2022')->get();

    // Utilizando Filtro (WhereTime) //
    // $contatos = SiteContato::whereTime('created_at', '>', '20:00:00')->get();

    // Utilizando Filtro (WhereColumn) , compara o valor das duas colunas //
    // $contatos = SiteContato::whereColumn('created_at', 'updated_at')->get();  
    // $contatos = SiteContato::whereColumn('created_at', '<>', 'updated_at')->get();                  

    // Aplicando precedência em operações lógicas //
    // $contatos = SiteContato::where(function($query){ $query->where('nome', 'Jorge')->orWhere('nome','Ana'); })->where(function($query){ $query->whereIn('motivo_contato', [1, 2])->orWhereBetween('id',[4, 6]); })->get(); 

    // Ordenando Registros //
    
    // Ascedente//
    // $contatos = SiteContato::orderBy('nome', 'asc')->get(); 

    // Descendente //
    // $contatos = SiteContato::orderBy('nome', 'desc')->get(); 

    // Com 2 ordenações //
    // $contatos = SiteContato::orderBy('motivo_contato')->orderBy('nome', 'desc')->get();

    // Collection first //
    // $contatos = SiteContato::where('id', '>', 3)->get();  
    // $contatos->first(); 

    // Collection last //
    // $contatos = SiteContato::where('id', '>', 3)->get();  
    // $contatos->last();

    // Collection reverse //
    // $contatos = SiteContato::where('id', '>', 3)->get();  
    // $contatos->reverse();

    // Collection toArray //
    // $contatos = SiteContato::where('id', '>', 3)->get();  
    // $contatos->toArray();

    // Collection toJson //
    // $contatos = SiteContato::where('id', '>', 3)->get();  
    // $contatos->toJson();

    //Collection Pluck //
    //$contatos = SiteContato::all()->pluck('email')  

    // Atualizando dados de um campo (Save) //
    // $fornecedor->nome = 'Fornecedor123';                                                            
    // $fornecedor->site = 'fornecedor123.com.br';                                                     
    // $fornecedor->email = 'contato@fornecedor123.com.br';                                           
    // $fornecedor->save();                                                                            

    // Atualizando dados de um campo (Fill) //
    // $fornecedor2->fill(['nome' => 'Fornecedor789', site => 'fornecedor789.com.br', email => 'contato@fornecedor789.com.br']);  
    // $fornecedor2->save();

    // Update //
    // Fornecedor::whereIn('id', [1, 2])->update(['nome' => 'Fornecedor Teste', 'site' => 'teste.com.br' ]);


    // Delete //
    // $contato->delete();  
    // SiteContato::where('id', 7)->delete(); 

    // Destroy //
    // SiteContato::destroy(5);   

    // Quando desejar apagar o registro que foi contido no SoftDelete //
    // $fornecedor->forceDelete();    

    // Retornando registros deletados com SoftDelete //
    // Fornecedor::onlyTrashed()->get();    
    //>>> $fornecedores[0]->restore();                                                           